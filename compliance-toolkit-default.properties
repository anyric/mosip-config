# Follow properites have their values assigned via 'overrides' environment variables of config server docker.
# DO NOT define these in any of the property files.  They must be passed as env variables.  Refer to config-server
# helm chart:
# db.dbuser.password 
# mosip.prereg.client.secret
# prereg.captcha.site.key
# prereg.captcha.secret.key
# keycloak.internal.host
# keycloak.internal.url
# s3.accesskey 
# s3.region
# s3.secretkey

## Database properties
# Database hostname below is assuming postgres is running inside cluster in 'postgres' namespace
# If database is external to production, provide the DNS or ip of the host and port 
#javax.persistence.jdbc.driver=org.postgresql.Driver
#mosip.database.ip=postgres-postgresql.postgres
#mosip.database.port=5432
#javax.persistence.jdbc.url=jdbc:postgresql://${mosip.database.ip}:${mosip.database.port}/mosip_prereg?useSSL=false
#javax.persistence.jdbc.user=prereguser
#javax.persistence.jdbc.password=${db.dbuser.password}

##DB properties
javax.persistence.jdbc.driver=org.postgresql.Driver
mosip.database.ip=postgres-postgresql.postgres
mosip.database.port=5432
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.database.ip}:${mosip.database.port}/mosip_toolkit?useSSL=false
javax.persistence.jdbc.user=toolkituser
javax.persistence.jdbc.password=IkTQgpvxja

## Hibernate
hibernate.hbm2ddl.auto=none
hibernate.show_sql=false
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.jdbc.lob.non_contextual_creation=true

logging.level.com.zaxxer.hikari=DEBUG

## Project Version for the API response 
version=1.0

server.servlet.context-path=/v1/toolkit

## Security properties
mosip.security.csrf-enable=false
mosip.security.cors-enable=false
mosip.security.origins=localhost:8099
mosip.security.secure-cookie=false

#iam 
mosip.api.internal.url=https://${mosip.api.internal.host}
#keycloak.external.url=${mosip.api.internal.url}/keycloak
iam.base.url=${keycloak.external.url}

#iam adapter setup
mosip.service-context=${server.servlet.context-path}
mosip.service.end-points=/**/toolkit/**
mosip.global.end-points=/**/assets/**,/**/icons/**,/**/screenshots/**,/favicon**,/**/favicon**,/**/css/**,/**/js/**,/**/error**,/**/webjars/**,/**/csrf,/*/,/**/authenticate/**,/**/actuator/**,/sendOtp,/validateOtp,/invalidateToken,/config,/login,/logout,/validateOTP,/sendOTP,/**/login,/**/login/**,/**/login-redirect/**,/**/logout/**,/**/h2-console/**,/**/**/license/**,/**/callback/**,/**/authenticate/**
#mosip.service.exclude.auth.allowed.method=POST,GET,PATCH,PUT,DELETE
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter
mosip.auth.filter_disable=false
mosip.kernel.auth.adapter.ssl-bypass=true
mosip.kernel.auth.appid-realm-map={toolkit:'mosip'}
mosip.kernel.auth.appids.realm.map={toolkit:'mosip'}

#iam adapter
mosip.iam.adapter.appid=toolkit
mosip.iam.adapter.clientid=mosip-toolkit-client
mosip.iam.adapter.clientsecret=${mosip.toolkit.client.secret}

auth.server.admin.issuer.uri=${keycloak.external.url}/auth/realms/
auth.server.admin.allowed.audience=mosip-toolkit-client
auth.allowed.urls=https://${mosip.compliance.host}/
mosip.iam.certs_endpoint=${keycloak.external.url}/auth/realms/mosip/protocol/openid-connect/certs

auth.server.validate.url=${mosip.api.internal.url}/v1/authmanager/authorize/admin/validateToken

## below are required for kernel-authcodeflowproxy-api dependency
mosip.iam.module.login_flow.name=authorization_code
mosip.iam.module.login_flow.scope=email
mosip.iam.module.login_flow.response_type=code
mosip.iam.module.clientid=mosip-toolkit-client
mosip.iam.module.clientsecret=${mosip.toolkit.client.secret}
mosip.iam.module.redirecturi=${mosip.api.internal.url}/v1/toolkit/login-redirect/
mosip.iam.module.admin_realm_id=mosip
mosip.iam.base-url=${iam.base.url}
mosip.iam.authorization_endpoint=${keycloak.external.url}/auth/realms/mosip/protocol/openid-connect/auth
mosip.iam.token_endpoint=${iam.base.url}/auth/realms/mosip/protocol/openid-connect/token
auth.server.admin.validate.url=${mosip.api.internal.url}/v1/authmanager/authorize/admin/validateToken

## below are required for kernel CBEFF util dependency
mosip.kernel.xsdstorage-uri=${spring.cloud.config.uri}/${spring.application.name}/${spring.profiles.active}/${spring.cloud.config.label}/
mosip.kernel.xsdfile=mosip-cbeff.xsd

## Signature Validation of SBI
mosip.service.auth.appid=regproc
mosip.service.auth.clientid=mosip-pms-client
mosip.service.auth.secretkey=${mosip.pms.client.secret}
mosip.service.validation.url={mosip.pms.partnermanager.url}/v1/partnermanager/deviceprovidermanagement/validate
mosip.service.authmanager.url=${mosip.api.internal.url}/v1/authmanager/authenticate/clientidsecretkey
mosip.service.keymanager.verifyCertificateTrust.url=${mosip.api.internal.url}/v1/keymanager/verifyCertificateTrust

sbi.ports=4501,4502,4503,4504,4505,4506,4507,4508,4509,4510

##the id for API
mosip.toolkit.api.id.projects.get=mosip.toolkit.projects.retrieve
mosip.toolkit.api.id.sbi.project.get=mosip.toolkit.sbi.project.retrieve
mosip.toolkit.api.id.collections.get=mosip.toolkit.collections.retrieve
mosip.toolkit.api.id.collection.get=mosip.toolkit.collection.retrieve
mosip.toolkit.api.id.collection.post=mosip.toolkit.collection.add
mosip.toolkit.api.id.sbi.project.post=mosip.toolkit.sbi.project.add
mosip.toolkit.api.id.testcase.project.get=mosip.toolkit.testcase.project.retrieve
mosip.toolkit.api.id.validations.post=mosip.toolkit.api.id.validations
mosip.toolkit.api.id.collection.testcases.get=mosip.toolkit.collection.testcases.retrieve
mosip.toolkit.api.id.collection.testcase.post=mosip.toolkit.collection.testcase.add
mosip.toolkit.api.id.testrun.post=mosip.toolkit.testrun.add
mosip.toolkit.api.id.testrun.put=mosip.toolkit.testrun.update
mosip.toolkit.api.id.testrun.details.post=mosip.toolkit.testrun.details.add
mosip.toolkit.api.id.testrun.details.get=mosip.toolkit.testrun.details.retrieve
mosip.toolkit.api.id.testcase.get=mosip.toolkit.testcase.retrieve
mosip.toolkit.api.id.testrun.history.get=mosip.toolkit.testrun.history.retrieve
